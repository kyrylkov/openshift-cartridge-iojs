#!/bin/bash

function update_runtime {
  if [ -f "$OPENSHIFT_REPO_DIR/.openshift/IOJS_VERSION_URL" ]; then
    local VERSION_URL=$(cat $OPENSHIFT_REPO_DIR/.openshift/IOJS_VERSION_URL)
  else
    local VERSION_URL="https://semver.io/iojs/stable"
  fi

  local LATEST="v$(curl --silent --max-time 5 ${VERSION_URL})"
  local IOJS_URL=https://iojs.org/dist/${LATEST}/iojs-${LATEST}-linux-x64.tar.gz

  if [ "$LATEST" = "v" ]; then
    echo "Could not retrieve io.js version information from $VERSION_URL"
    return 1
  fi

  # Update io.js if necessary
  if [ $(node --version) != ${LATEST} ]; then
    # Download
    if ! curl -L -o ${OPENSHIFT_DATA_DIR}tmp.tgz $IOJS_URL; then
      return 1
    fi

    # Remove old files
    rm -rf ${OPENSHIFT_DATA_DIR}.iojs

    # Copy binaries
    mkdir ${OPENSHIFT_DATA_DIR}.iojs
    tar -xvzf ${OPENSHIFT_DATA_DIR}tmp.tgz --strip-components=1 -C ${OPENSHIFT_DATA_DIR}.iojs

    # Remove downloaded archive
    rm ${OPENSHIFT_DATA_DIR}tmp.tgz

    # Output result
    echo "io.js updated to $(iojs --version) with npm $(npm --version)."
  fi

  # Update global npm if necessary
  if [ $(npm view npm version) != $(npm --version) ]; then
    npm i -g npm
    echo "npm updated to $(npm --version)."
  fi
}
